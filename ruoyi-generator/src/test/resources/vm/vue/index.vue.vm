<template lang="pug">
  .${className}_wrapper.base_query_page
    .conds
      a-form.flex_center(:label-col="{ span: 8 }" :wrapper-col="{ span: 16 }")
#foreach($column in $columns)
#if($column.query)
        a-form-item(label="${column.genLabel()}")
          ${column.genComponent()}
#end
#end
      div.tr
        a-button(type="primary" @click="loadAll") 查询
    .body.mt16
      .ops.flex_center
        .flex_one
          | ${functionName}管理
        .btns
          a-button(type="primary" @click="add${ClassName}Click()") 新增
          a-button(@click="importByExcel") 批量导入
          a-button(@click="exportByExcel") 导出
      .list
        a-table(:columns="columns" :data-source="list" rowKey="id" :pagination="false")
         span(slot="index"  slot-scope="text, record, index") {{index + 1}}
         span(slot="action" slot-scope="text, record")
           a(@click="add${ClassName}Click(record.id)") 编辑
           a-divider(type="vertical")
           a(@click="deleteClick(record)") 删除
      .pagination
        a-pagination(v-model="pageReq.page"
          :total="total"
          :pageSize="pageReq.pageSize"
          show-less-items
          @change="changePage"
          @showSizeChange="changePageSize"
          )
    a-modal(title="导入${functionName}"
      :visible="importVisible"
      okText="确认上传"
      @ok="handleOk"
      @cancel="importVisible = false")
      a-upload(
        name="file"
        :multiple="false"
        :customRequest="uploadFile"
        :fileList="fileList"
        :remove="removeFile"
        )
        a-button(v-if="fileList.length < 1")
          a-icon(type="upload")
          span 选择文件
      .tr
        a(@click="") 下载模板文件
</template>

<script>
import { export${ClassName}, import${ClassName}, query${ClassName}Page, delete${ClassName} } from '@api/emergencyhandle/${className}'

export default {
  name: 'Index',
  data () {
    return {
      cond: {},
      columns: [
        { title: '序号', scopedSlots: { customRender: 'index' } },
#foreach($column in $columns)
#if($column.query)
        { title: '${column.genLabel()}', dataIndex: '${column.javaField}', key: '${column.javaField}' },
#end
#end
        { title: '操作', scopedSlots: { customRender: 'action' } }
      ],
      list: [],
      pageReq: {
        page: 1,
        pageSize: 20
      },
      total: 0,
      importVisible: false,
      fileList: []
    }
  },
  created () {
    this.loadAll()
  },
  methods: {
    loadAll () {
      query${ClassName}Page({ ...this.cond, ...this.pageReq }).then(res => {
        const { total, list } = res.data
        this.list = list
        this.total = total
      })
    },
    add${ClassName}Click (id) {
      const obj = { path: '/${className}/edit', query: { id }};
      this.$router.push(obj)
    },
    changePage (page) {
      this.pageReq.page = page
      this.loadAll()
    },
    changePageSize (size) {
      this.pageReq.pageSize = size
      this.pageReq.page = 1
      this.loadAll()
    },
    exportByExcel () {
      export${ClassName}()
        .then(resp => {
          const blob = resp.data
          const url = window.URL.createObjectURL(blob)
          const a = document.createElement('a')
          a.style.display = 'none'
          a.href = url
          // the filename you want
          a.download = '${functionName}.xlsx'
          document.body.appendChild(a)
          a.click()
          window.URL.revokeObjectURL(url)
          this.$message.success('导入成功！')
        })
        .catch(() => this.$message.error('导入失败！'))
    },
    importByExcel () {
      this.importVisible = true
      this.fileList = []
    },
    uploadFile (uploadObj) {
      this.fileList.push(uploadObj.file)
    },
    removeFile (file) {
      const index = this.fileList.findIndex(v => v === file)
      this.fileList.splice(index, 1)
    },
    handleOk () {
      if (this.fileList.length === 0) {
        this.importVisible = false
        return
      }
      import${ClassName}(this.fileList[0]).then(res => {
        console.log(res)
        this.loadAll()
      }).finally(() => {
        this.importVisible = false
      })
    },
    deleteClick (row) {
      this.$confirm({
        title: '删除确认',
        content: '确认删除 ' + row.userName + ' ?',
        onOk: () => {
          delete${ClassName}([row.id]).then(res => {
            this.$message.success('删除成功！')
            this.loadAll()
          })
        }
      })
    }
  }
}
</script>

<style lang="stylus">
.${className}_wrapper
  padding 0
</style>
